volumes:
  pg_data_production:
  static_volume:
  media_volume:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data_production:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: denisbelikov/kittygram_backend
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --no-input &&
               gunicorn kittygram_backend.wsgi --bind 0.0.0.0:8000"
    env_file: .env
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=${DEBUG:-False}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-backend,localhost}

  frontend:
    image: denisbelikov/kittygram_frontend
    env_file: .env
    command: cp -r /app/build/. /staticfiles/
    volumes:
      - static_volume:/staticfiles/

  gateway:
    image: denisbelikov/kittygram_gateway
    volumes:
      - static_volume:/staticfiles/
      - media_volume:/mediafiles/
    ports:
      - "8000:80"
    depends_on:
      - backend
      - frontend
